{"version":3,"sources":["components/About.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","Form","state","year","selectedYear","make","selectedMake","model","selectedModel","options","selectedOption","avgMPG","miles","carbonFootprint","error","res","statusText","Promise","reject","code","status","message","text","el","e","target","value","fetch","method","then","handleErrors","data","DOMParser","parseFromString","childNodes","forEach","node","push","innerHTML","setState","catch","err","console","this","obj","id","vehicle","log","preventDefault","carbon","toFixed","onSubmit","handleSubmit","htmlFor","type","min","onChange","handleChange","required","map","name","disabled","defaultValue","item","Object","values","keys","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcd61711.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <header className=\"app__header\">\r\n      <h1>Carbon Footprint</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nclass Form extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      year: [\r\n        '2023', '2022', '2021', '2020', '2019', \r\n        '2018', '2017', '2016', '2015', '2014',\r\n        '2013', '2012', '2011', '2010', '2009',\r\n        '2008', '2007', '2006', '2005', '2004',\r\n        '2003', '2002', '2001', '2000', '1999',\r\n        '1998', '1997', '1996', '1995', '1994',\r\n        '1993', '1992', '1991', '1990', '1989',\r\n        '1988', '1987', '1986', '1985', '1984'\r\n      ],\r\n      selectedYear: null,\r\n      make: null,\r\n      selectedMake: null,\r\n      model: null,\r\n      selectedModel: null,\r\n      options: null,\r\n      selectedOption: null,\r\n      avgMPG: null,\r\n      miles: null,\r\n      carbonFootprint: null,\r\n      error: null\r\n    }\r\n  }\r\n\r\n  handleErrors(res) {\r\n    if (res.statusText === 'No Content') {\r\n      return Promise.reject({\r\n        code: res.status,\r\n        message: res.statusText\r\n      });\r\n    } else {\r\n      return res.text();\r\n    }\r\n  }\r\n\r\n  handleChange(el, e) {\r\n    if (e.target.value) {\r\n      if (el === 'year') {\r\n        const year = e.target.value;\r\n        return fetch(`https://www.fueleconomy.gov/ws/rest/vehicle/menu/make?year=${year}`,\r\n            { method: 'GET' })\r\n          .then((res) => this.handleErrors(res))\r\n          .then((res) => {\r\n            const data = new DOMParser()\r\n              .parseFromString(res, 'application/xml');\r\n            const make = [];\r\n\r\n            data.childNodes[0].childNodes.forEach((node) => {\r\n              make.push(node.childNodes[0].innerHTML);\r\n            });\r\n\r\n            this.setState({\r\n              selectedYear: year,\r\n              make,\r\n              selectedMake: null,\r\n              model: null,\r\n              selectedModel: null,\r\n              options: null,\r\n              selectedOption: null,\r\n              avgMPG: null,\r\n              miles: null,\r\n              carbonFootprint: null,\r\n              error: null\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n            this.setState({ error: 'This selection did not return any data.' });\r\n          })\r\n      } else if (el === 'make') {\r\n        const make = e.target.value;\r\n        return fetch(`https://fueleconomy.gov/ws/rest/vehicle/menu/model?year=${this.state.selectedYear}&make=${make}`,\r\n            { method: 'GET' })\r\n          .then((res) => this.handleErrors(res))\r\n          .then((res) => {\r\n            const data = new DOMParser()\r\n              .parseFromString(res, 'application/xml');\r\n            const model = [];\r\n\r\n            data.childNodes[0].childNodes.forEach((node) => {\r\n              model.push(node.childNodes[0].innerHTML);\r\n            });\r\n\r\n            this.setState({\r\n              selectedMake: make,\r\n              model,\r\n              selectedModel: null,\r\n              options: null,\r\n              selectedOption: null,\r\n              avgMPG: null,\r\n              miles: null,\r\n              carbonFootprint: null,\r\n              error: null\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n            this.setState({ error: 'This selection did not return any data.' });\r\n          })\r\n      } else if (el === 'model') {\r\n        const model = e.target.value;\r\n        return fetch(`https://fueleconomy.gov/ws/rest/vehicle/menu/options?year=${this.state.selectedYear}&make=${this.state.selectedMake}&model=${model}`,\r\n            { method: 'GET' })\r\n          .then((res) => this.handleErrors(res))\r\n          .then((res) => {\r\n            const data = new DOMParser().parseFromString(res, 'application/xml');\r\n            const options = [];\r\n            data.childNodes[0].childNodes.forEach((node) => {\r\n              let obj = {};\r\n              let id = node.childNodes[1].innerHTML;\r\n              obj[node.childNodes[0].innerHTML] = id;\r\n              options.push(obj);\r\n            });\r\n\r\n            this.setState({\r\n              selectedModel: model,\r\n              options,\r\n              selectedOption: null,\r\n              avgMPG: null,\r\n              miles: null,\r\n              carbonFootprint: null,\r\n              error: null\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n            this.setState({ error: 'This selection did not return any data.' });\r\n          })\r\n      } else if (el === 'options') {\r\n          const vehicle = e.target.value;\r\n          \r\n          return fetch(`https://fueleconomy.gov/ws/rest/ympg/shared/ympgVehicle/${vehicle}`,\r\n              { method: 'GET' })\r\n            .then((res) => this.handleErrors(res))\r\n            .then((res) => {\r\n              const data = new DOMParser().parseFromString(res, 'application/xml');\r\n              const avgMPG = data.childNodes[0].childNodes[0].innerHTML;\r\n  \r\n              this.setState({\r\n                selectedOption: vehicle,\r\n                avgMPG,\r\n                miles: null,\r\n                carbonFootprint: null,\r\n                error: null\r\n              });\r\n            })\r\n            .catch((err) => {\r\n              console.error(err);\r\n              this.setState({ error: 'This selection did not return any data.' });\r\n            })\r\n      } else if (el === 'miles-driven') {\r\n        this.setState({ miles: e.target.value })\r\n      }\r\n    }\r\n    console.log(this.state, 'this.state')\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    // the rate of 8887 g CO2 emitted per gallon of gasoline was\r\n    // taken from the EPA website\r\n    \r\n    if (!this.state.error) {\r\n      let carbon = (this.state.miles / this.state.avgMPG) * 8887;\r\n      carbon = carbon.toFixed(2);\r\n      this.setState({ carbonFootprint: carbon });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={(e) => this.handleSubmit(e)}>\r\n          <h2>Calculate Carbon Footprint</h2>\r\n          <div className=\"form__error\">{this.state.error}</div>\r\n          <fieldset>\r\n            <p>To calculate a vehicle's carbon footprint, enter the information below and click 'Submit.'</p>\r\n\r\n            <div className=\"form__select\">\r\n              <label htmlFor=\"miles-driven\">miles/year: </label>\r\n              <input\r\n                id=\"miles-driven\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                onChange={(e) => this.handleChange('miles-driven', e)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {\r\n              ['year', 'make', 'model'].map((el) => {\r\n                return (\r\n                  <div className=\"form__select\" key={el}>\r\n                    <label htmlFor={el}>{el}: </label>\r\n                    <select\r\n                      name={el}\r\n                      id={el}\r\n                      disabled={this.state[el] === null}\r\n                      onChange={(e) => this.handleChange(el,e)}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option value=\"\">-- Select -- </option>\r\n                      {\r\n                        this.state[el] === null ? null : this.state[el].map((item) => {\r\n                          return <option key={item} value={item}>{item}</option>\r\n                        })\r\n                      }\r\n                    </select>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n\r\n            <div className=\"form__select\">\r\n              <label htmlFor='options'>options: </label>\r\n              <select\r\n                name='options'\r\n                id='options'\r\n                disabled={this.state.options === null}\r\n                onChange={(e) => this.handleChange('options', e)}\r\n                defaultValue=\"\"\r\n              >\r\n                <option value=\"\">-- Select -- </option>\r\n                {\r\n                  this.state.options === null ? null : this.state.options.map((item) => {\r\n                    return (\r\n                      <option \r\n                        key={Object.keys(item)[0]}\r\n                        value={Object.values(item)[0]}\r\n                      >\r\n                        {Object.keys(item)[0]}\r\n                      </option>\r\n                    )\r\n                  })\r\n                }\r\n              </select>\r\n            </div>\r\n            \r\n          </fieldset>\r\n          <button disabled={!this.state.miles && !this.state.avgMPG}>Submit</button>\r\n        </form>\r\n        <div className=\"results\">\r\n          <p>Miles/year: {this.state.miles}</p>\r\n          <p>Miles per gallon (MPG): {this.state.avgMPG ? this.state.avgMPG : null}</p>\r\n          <p>Carbon Footprint: {\r\n            this.state.carbonFootprint && !this.state.error ?\r\n              this.state.carbonFootprint + 'g CO2 per year' :\r\n              null\r\n            }\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Form;\r\n","import About from './components/About';\r\nimport Form from './components/Form';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <main>\r\n      <About />\r\n      <Form />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}